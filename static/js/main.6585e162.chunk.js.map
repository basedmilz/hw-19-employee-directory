{"version":3,"sources":["logo.svg","utils/api.js","components/Table/SearchForm/index.js","components/Table/index.js","App.js","reportWebVitals.js","index.js"],"names":["api","fetchEmployees","axios","get","SearchForm","Table","state","employees","filteremployees","sort","searchEmployee","name","filter","employee","first","includes","setState","API","then","data","results","className","scope","this","map","src","picture","thumbnail","last","email","phone","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAAe,I,sDCKAA,EAJH,CACRC,eAAgB,kBAAMC,IAAMC,IAAI,2C,OCoBrBC,ICwCAC,E,4MAzDXC,MAAQ,CACJC,UAAW,GACXC,gBAAiB,GACjBC,KAAM,I,EAGdC,eAAiB,SAAAC,GACb,IAAMH,EAAkB,EAAKF,MAAME,gBAAgBI,QAAO,SAAAC,GAAQ,OAAIA,EAASF,KAAKG,MAAMC,SAASJ,MACnG,EAAKK,SAAS,CAACR,qB,uDAGf,WAAqB,IAAD,OAChBS,EAAIhB,iBAAiBiB,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACzB,EAAKH,SAAS,CACVT,UAAWY,EAAKC,e,oBAS5B,WACI,OACI,sBAAKC,UAAU,MAAf,UACI,uBAAOA,UAAU,WAEjB,wBAAOA,UAAU,mBAAjB,UACI,gCACI,+BACI,oBAAIC,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,wBAGR,gCACKC,KAAKjB,MAAMC,UAAUiB,KAAI,SAAAX,GAGtB,OAAO,+BACH,oBAAIS,MAAM,MAAV,SACI,qBAAKG,IAAKZ,EAASa,QAAQC,cAE/B,6BAAKd,EAASF,KAAKG,MAAQ,IAAMD,EAASF,KAAKiB,OAC/C,6BAAKf,EAASgB,QACd,6BAAKhB,EAASiB,0B,GAhD1BC,IAAMC,WCIXC,MAJf,WACA,OAAO,cAAC,EAAD,KCOQC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6585e162.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import axios from \"axios\";\nconst api = {\n    fetchEmployees: () => axios.get('https://randomuser.me/api/?results=50')\n\n}\nexport default api;","import React from \"react\";\n\n\n// Using the datalist element we can create autofill suggestions based on the props.breeds array\nfunction SearchForm(props) {\n  return (\n    <form className=\"search\">\n      <div className=\"form-group\">\n        \n        <input\n          value={props.search}\n          onChange={props.handleInputChange}\n          type=\"text\"\n          className=\"form-control\"\n          id=\"search\"\n        />\n        \n      </div>\n    </form>\n  );\n}\n\nexport default SearchForm;","import React from \"react\";\nimport API from \"../../utils/api\";\nimport SearchForm from \"./SearchForm\"\n\nclass Table extends React.Component {\n    state = {\n        employees: [],\n        filteremployees: [],\n        sort: \"\"\n    }\n\nsearchEmployee = name => {\n    const filteremployees = this.state.filteremployees.filter(employee => employee.name.first.includes(name));\n    this.setState({filteremployees});\n}\n\n    componentDidMount() {\n        API.fetchEmployees().then(({ data }) => {\n            this.setState({\n                employees: data.results\n            })\n        }\n        )\n\n    }\n\n    \n    \n    render() {\n        return (\n            <div className=\"App\">\n                <input className=\"search\"/>\n            \n                <table className=\"table table-dark\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">Image</th>\n                            <th scope=\"col\">Name</th>\n                            <th scope=\"col\">Email</th>\n                            <th scope=\"col\">Phone</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.employees.map(employee => {\n\n\n                            return <tr>\n                                <td scope=\"row\">\n                                    <img src={employee.picture.thumbnail}/>\n                                </td>\n                                <td>{employee.name.first + \" \" + employee.name.last}</td>\n                                <td>{employee.email}</td>\n                                <td>{employee.phone}</td>\n                            </tr>\n                        })}\n\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\nexport default Table;","import logo from './logo.svg';\nimport './App.css';\nimport Table from './components/Table';\n\nfunction App() {\nreturn <Table/>\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}